name: build

on:
  push:
    branches:
      - '*'
    paths-ignore:
      - 'docs/**'
      - 'LICENSE'
      - 'README.md'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Flake8 Lint
        uses: py-actions/flake8@v2

  prepare-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump_tag.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version for branch
        id: bump_tag
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          WITH_V: true
          DEFAULT_BUMP: patch
          DRY_RUN: ${{ github.ref_name != 'main' && github.ref_name != 'master' }}
          PRERELEASE: ${{ github.ref_name != 'main' && github.ref_name != 'master' }}
          PRERELEASE_SUFFIX: "test"

  release-docker:
    runs-on: ubuntu-latest
    needs: [prepare-version, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,enable=${{ github.ref_name != github.event.repository.default_branch }}
            type=raw,value=${{ needs.prepare-version.outputs.version }}
            type=raw,value=latest,enable={{ is_default_branch }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release-helm:
    runs-on: ubuntu-latest
    needs: [prepare-version, lint, release-docker]
    if: github.ref_name == 'master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Rewrite docker image tag in helm values
        run: |
          export version_cleaned=$(echo "$VERSION" | sed 's/^v//')
          yq eval ".image.tag = env(VERSION)" -i ./helm/alerto/values.yaml
          yq eval ".appVersion = env(version_cleaned)" -i ./helm/alerto/Chart.yaml
          yq eval ".version = env(version_cleaned)" -i ./helm/alerto/Chart.yaml
        env:
          VERSION: ${{ needs.prepare-version.outputs.version }}

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f
        with:
          charts_dir: helm
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
